name: Build Wheels

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  build-linux-wheels:
    name: Build Linux wheels for Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel

    - name: Build wheel
      run: python -m build --wheel

    - name: Upload Linux wheels
      uses: actions/upload-artifact@v4
      with:
        path: ./dist/*.whl
        name: linux-wheels-py${{ matrix.python-version }}

  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Build source distribution
      run: python -m build --sdist

    - name: Upload source distribution
      uses: actions/upload-artifact@v4
      with:
        path: ./dist/*.tar.gz
        name: sdist

  test-linux-wheels:
    name: Test Linux wheels
    runs-on: ubuntu-latest
    needs: [build-linux-wheels, build-sdist]
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Download Linux wheels
      uses: actions/download-artifact@v4
      with:
        name: linux-wheels-py${{ matrix.python-version }}
        path: dist/

    - name: Install wheel
      run: |
        python -m pip install --upgrade pip
        pip install dist/*.whl

    - name: Test installation
      run: |
        python -c "import sqltap; print('sqltap version:', sqltap.__version__ if hasattr(sqltap, '__version__') else 'unknown')"
        python -c "import sqltap; profiler = sqltap.start(); print('Profiler started successfully')"
